#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=98
STOP=98

SERVICE_WRITE_PID=1
SERVICE_PID_FILE="/var/run/ssredir.pid"
SERVICE_BIN="/usr/bin/ssredir"

ARGS=

BASE_IPTABLES="iptables -t nat "

FIREWALL_USER_RULE="/var/etc/ssredir.firewall.user"

type_ssredir_name=
type_iptables_name=

target_port=
chain_name=
chain_comment=

start() {
    config_load "ssredir"
    parse_args "${type_ssredir_name}"
    parse_iptables "${type_iptables_name}" "${type_ssredir_name}"
    service_start ${SERVICE_BIN} ${ARGS} -f ${SERVICE_PID_FILE}
}

stop() {

    config_load "ssredir"
    parse_args "${type_ssredir_name}"
    echo "">${FIREWALL_USER_RULE}
    local finc=""
    finc=$(uci get firewall.@include[-1].path 2>/dev/null)
    [ ${finc}x = ${FIREWALL_USER_RULE}x ] && {
      uci delete firewall.@include[-1];
      uci commit firewall;
      echo "Please restart the firewall";
    }
    service_stop ${SERVICE_BIN}
}

boot() {
    # Will be launched through hotplug
    return 0
}

config_cb() {
    local cfgtype="$1"
    local cfgname="$2"

    if [ "${cfgtype}" == "ssredir" ]; then
        type_ssredir_name="${cfgname}"
    fi

    if [ "${cfgtype}" == "iptables" ]; then
        type_iptables_name="${cfgname}"
    fi
}

parse_args() {
   local cfgname="$1" 
   config_list_foreach "${cfgname}" server handle_redir_server
   local sport
   config_get sport "${cfgname}" sport
   local lport
   config_get lport "${cfgname}" lport
   local method
   config_get method "${cfgname}" method
   local passwd
   config_get passwd "${cfgname}" passwd
   local timeout
   config_get timeout "${cfgname}" timeout

   target_port=${lport}
   ARGS="${ARGS} -p ${sport} -m ${method} -k ${passwd} -l ${lport} -t ${timeout}"
}

handle_redir_server() {
    local value="$1"
    ARGS="${ARGS} -s ${value} "
}


parse_iptables() {
    local cfgname="$1"
    local ssredir_cfgname="$2"

    local chain
    config_get chain "${cfgname}" chain
    chain_name=${chain}
    local comment
    config_get comment "${cfgname}" comment
    chain_comment=${comment}

    local finc=""
    finc=$(uci get firewall.@include[-1].path 2>/dev/null)
    [ ${finc}x = ${FIREWALL_USER_RULE}x ] || {
      uci add firewall include 2>&1 >/dev/null
      uci set firewall.@include[-1].path=${FIREWALL_USER_RULE}
      uci commit firewall
      echo "Please restart the firewall";
    }
    echo "">${FIREWALL_USER_RULE}
    echo "[ \$(${BASE_IPTABLES} -L ${chain} 2>/dev/null |wc -l) -eq 0 ] || { exit 1; }" >>${FIREWALL_USER_RULE}
    echo "${BASE_IPTABLES} -N ${chain}" >>${FIREWALL_USER_RULE}
    config_list_foreach "${ssredir_cfgname}" server handle_redir_return
    config_list_foreach "${cfgname}" ignore handle_redir_return

    echo "${BASE_IPTABLES} -A ${chain} -p tcp -m comment --comment \"${chain_comment}\" -j REDIRECT --to-ports ${target_port}" >>${FIREWALL_USER_RULE}

    config_list_foreach "${cfgname}" ipset handle_redir_join
}

handle_redir_return() {
    local value="$1"
    echo "${BASE_IPTABLES} -A ${chain_name} -d ${value} -j RETURN">>${FIREWALL_USER_RULE}
}


handle_redir_join() {
    local value=$1
    echo "[ \$(ipset list ${value} 2>/dev/null| wc -l) -eq 0 ] && { ipset -N ${value} iphash; }" >>${FIREWALL_USER_RULE}
    echo "${BASE_IPTABLES} -A prerouting_lan_rule -p tcp -m set --match-set ${value} dst -j ${chain_name} -m comment --comment \"${chain_comment}\" " >>${FIREWALL_USER_RULE}
}
